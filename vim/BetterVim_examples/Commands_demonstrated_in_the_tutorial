"============================================================================
" Start reading Vim's built-in help manual
"============================================================================

    :help


"============================================================================
" Get help for a particular <topic>
"============================================================================

    :help <topic><CR>


"============================================================================
" Get a list of all help topics containing <string>
"============================================================================

    :help <string><TAB>


"============================================================================
" Search exhaustively through manual for every instance matching <pattern>
"============================================================================

    :helpgrep <pattern>


"============================================================================
" Search exhaustively through <filenames> for every instance matching <pattern>
"============================================================================

    :vimgrep /<pattern>/ <filenames>


"============================================================================
" Get a list of Normal mode commands and Insert mode commands
"============================================================================

    :help normal-index
    :help insert-index


"============================================================================
" Find out about configuring the statusline ruler
"============================================================================

    :help rulerformat


"============================================================================
" Find out about configuring the entire statusline
"============================================================================

    :help statusline


"============================================================================
" Turn off the highlights set up by the most recent search
"============================================================================

    :nohlsearch


"============================================================================
" Substitute once on the current line
"============================================================================

    :s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line between lines 10 and 33
"============================================================================

    :10,33s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line on every line from the current line
"============================================================================

    :.,$s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line on every line in the file
"============================================================================

    :1,$s/<pattern>/<replacement>
    :%s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line from 10 lines before to 33 lines after the cursor
"============================================================================

    :-10,+33s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line from 10 lines before for the following 33 lines
"============================================================================

    :-10;+33s/<pattern>/<replacement>


"============================================================================
" Substitute once-per-line between the next set of body tags
"============================================================================

    :/<body>/,/<\/body>/s/<I>/<EM>/


"============================================================================
" Substitute once-per-line from the nearest preceding line with a "foo"
" to the 10th line before the end-of-file
"============================================================================

    :?foo?+1,$-10s/<pattern>/<replacement>


"============================================================================
" Substitute as-many-times-as-possible-per-line
"============================================================================

    :s/<pattern>/<replacement>/g
    :10,33s/<pattern>/<replacement>/g
    :%s/<pattern>/<replacement>/g


"============================================================================
" Substitute interactively (ask for confirmation each time)
"============================================================================

    :%s/cat/feline/c


"============================================================================
" Repeat the previous substitution (applying it to the current line)
"============================================================================

    :s<CR>
    &


"============================================================================
" Repeat the previous substitution (applying it to every line)
"============================================================================

    :%s<CR>
    g&


"============================================================================
" Center every line in the file within a width of 60 columns
"============================================================================

    :%center 60


"============================================================================
" Apply the colon command to every line matching the pattern
"============================================================================

    :g /^\s/    :center
    :g /<ISBN>/ :normal gUU


"============================================================================
" Apply the colon command to every line NOT matching the pattern
"============================================================================

    :g! /^\s/ :center


"============================================================================
" Convert each paragraph to a single line
"============================================================================

    :g /./ :.;/^$/join


"============================================================================
" Convert each paragraph to a single line (leaving empty lines between them)
"============================================================================

    :g /./ :.;/^$/-1join


"============================================================================
" Switch to the previous/next undo timeline
"============================================================================

    g-
    g+


"============================================================================
" Undo or redo to the buffer state at the time specified
" (changing undo timelines, if necessary)
"============================================================================

    :earlier 10m
    :later 30s


"============================================================================
" You can use standard shell expansions on the Vim command-line
"============================================================================

    :read ~/vim/lib*.[ch]


"============================================================================
" In addition, % means "this file" and # means "previous file"
"============================================================================

    :write %.bak
    :read #


"============================================================================
" In addition, ** means "anywhere below the current directory"
"============================================================================

    :next **/filename.txt


"============================================================================
" Change what Vim thinks a "definition" is (i.e. how <CTRL-X><CTRL-D> words)
"============================================================================

    :set define=^\\\\s*sub


"============================================================================
" Change what Vim thinks a "keyword" is (i.e. how <CTRL-X><CTRL-I> words)
"============================================================================

    :set iskeyword=a-z,A-Z,48-57,_,.,-,>


"============================================================================
" Add a file of extra "identifiers" that <CTRL-X><CTRL-I> can complete with
"============================================================================

    set complete+=k~/data/my_std_identifiers


"============================================================================
" Switch on JavaScript omnicompletion
" (even though Vim didn't recognize the current file as being JavaScript)
"============================================================================

    :filetype plugin on
    set omnifunc=javascriptcomplete#CompleteJS


"============================================================================
" Special Visual Block mode command to insert before a block
"============================================================================

    {motion}I{text}


"============================================================================
" Special Visual Block mode command to append after a block
"============================================================================


    {motion}A{text}


"============================================================================
" Special Visual Block mode command to overwrite the contents of a block
"============================================================================

    {motion}c{text}
    {motion}r{char}


"============================================================================
" Shift the entire paragraph that the cursor is (anywhere) inside
"============================================================================

    vip>


"============================================================================
" Join the lines of the entire paragraph that the cursor is (anywhere) inside
"============================================================================

    vipJ


"============================================================================
" Turn on the markers for the current line/column
"============================================================================

    :set cursorline
    :set cursorcolumn


"============================================================================
" Turn off the markers for the current line/column
"============================================================================

    :set nocursorline
    :set nocursorcolumn


"============================================================================
" Change the way the current line/column is highlighted
"============================================================================

    :highlight CursorLine    term=bold  cterm=inverse
    :highlight CursorColumn  term=bold  ctermfg=cyan  ctermbg=black


"============================================================================
" Folding commands (see :help for the use of each)
"============================================================================

    zf
    zF
    zo
    zc
    zn
    zi
    zd
    ze
    zm
    zM
    zr
    zR


